name: Release

on:
  push:
    tags: ["v*"]  # Trigger on tags like v1.0.0

jobs:
  version-check:
    name: Verify version consistency
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify crate version matches release tag
        run: |
          CRATE_VERSION=$(grep -m1 '^version' Cargo.toml | cut -d '"' -f 2)
          if [[ "v$CRATE_VERSION" != "${{ github.ref_name }}" ]]; then
            echo "Error: Cargo.toml version ($CRATE_VERSION) doesn't match release tag (${{ github.ref_name }})"
            exit 1
          fi

  build:
    name: Build (${{ matrix.platform }})
    needs: version-check  # Wait for version validation
    strategy:
      matrix:
        include:
          - platform: linux
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            binary_name: loss
          - platform: macos
            target: x86_64-apple-darwin
            os: macos-latest
            binary_name: loss
          - platform: windows
            target: x86_64-pc-windows-gnu
            os: windows-latest
            binary_name: loss.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v3
        with:
          path: release_binaries

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          files: |
            release_binaries/linux/loss
            release_binaries/macos/loss
            release_binaries/windows/loss.exe
          generate_release_notes: true