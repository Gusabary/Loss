name: Release

on:
  push:
    tags: ["v*"]

permissions:
  contents: write

jobs:
  version-check:
    name: Verify version consistency
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify crate version matches release tag
        run: |
          CRATE_VERSION=$(grep -m1 '^version' Cargo.toml | cut -d '"' -f 2)
          if [[ "v$CRATE_VERSION" != "${{ github.ref_name }}" ]]; then
            echo "Error: Cargo.toml version ($CRATE_VERSION) doesn't match release tag (${{ github.ref_name }})"
            exit 1
          fi

  publish-crates:
    name: Publish crates
    needs: version-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo publish --verbose

  build:
    name: Build (${{ matrix.name }})
    needs: version-check
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: loss
          - os: ubuntu-latest
            name: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
            binary_name: loss
          - os: macos-latest
            name: macos-latest
            target: x86_64-apple-darwin
            binary_name: loss
          - os: windows-latest
            name: windows-latest
            target: x86_64-pc-windows-gnu
            binary_name: loss.exe
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.name == 'ubuntu-18.04' && 'ubuntu:18.04' || null }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary
        working-directory: ${{ runner.workspace }}/Loss/
        run: |
          mkdir loss-${{ matrix.name }}
          mv target/${{ matrix.target }}/release/${{ matrix.binary_name }} loss-${{ matrix.name }}/
          mv README.md loss-${{ matrix.name }}/
          mv LICENSE loss-${{ matrix.name }}/
          mv docs/changelog loss-${{ matrix.name }}/
          tar -czvf loss-${{ matrix.name }}.tar.gz -C loss-${{ matrix.name }} .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: loss-${{ matrix.name }}.tar.gz
          path: loss-${{ matrix.name }}.tar.gz

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: release_binaries
          pattern: 'loss-*.tar.gz'
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "${{ github.ref_name }}"
          files: |
            release_binaries/loss-ubuntu-latest.tar.gz
            release_binaries/loss-ubuntu-18.04.tar.gz
            release_binaries/loss-macos-latest.tar.gz
            release_binaries/loss-windows-latest.tar.gz
          generate_release_notes: true